{"version":3,"sources":["auth-test.js"],"names":["test","beforeEach","t","srv","auth","context","url","user","fixtures","getUser","options","method","uri","body","username","password","json","token","decoded","utils","verifyToken","config","secret","is"],"mappings":";AAAA;;AAEA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;AANA;;;AAQAA,cAAKC,UAAL;AAAA,+BAAgB,WAAMC,CAAN,EAAW;AACzB,QAAIC,MAAM,qBAAMC,cAAN,CAAV;AACAF,MAAEG,OAAF,CAAUC,GAAV,GAAgB,MAAM,0BAAOH,GAAP,CAAtB;AACD,GAHD;;AAAA;AAAA;AAAA;AAAA;;AAKA,mBAAK,gBAAL;AAAA,gCAAuB,WAAMD,CAAN,EAAW;AAChC,QAAIK,OAAOC,mBAASC,OAAT,EAAX;AACA,QAAIH,MAAMJ,EAAEG,OAAF,CAAUC,GAApB;;AAEA,QAAII,UAAU;AACZC,cAAQ,MADI;AAEZC,WAAKN,GAFO;AAGZO,YAAM;AACJC,kBAAUP,KAAKO,QADX;AAEJC,kBAAUR,KAAKQ;AAFX,OAHM;AAOZC,YAAM;AAPM,KAAd;;AAUA,QAAIC,QAAQ,MAAM,8BAAQP,OAAR,CAAlB;AACA,QAAIQ,UAAU,MAAMC,gBAAMC,WAAN,CAAkBH,KAAlB,EAAyBI,iBAAOC,MAAhC,CAApB;;AAEApB,MAAEqB,EAAF,CAAKL,QAAQJ,QAAb,EAAuBP,KAAKO,QAA5B;AACD,GAlBD;;AAAA;AAAA;AAAA;AAAA","file":"auth-test.js","sourcesContent":["'user strict'\r\n\r\nimport test from 'ava'\r\nimport micro from 'micro'\r\n// import uuid from 'uuid-base62'\r\nimport listen from 'test-listen'\r\nimport request from 'request-promise'\r\nimport fixtures from './fixtures'\r\nimport auth from '../auth'\r\nimport config from '../config'\r\nimport utils from '../lib/utils'\r\n\r\ntest.beforeEach(async t => {\r\n  let srv = micro(auth)\r\n  t.context.url = await listen(srv)\r\n})\r\n\r\ntest('success POST /', async t => {\r\n  let user = fixtures.getUser()\r\n  let url = t.context.url\r\n\r\n  let options = {\r\n    method: 'POST',\r\n    uri: url,\r\n    body: {\r\n      username: user.username,\r\n      password: user.password\r\n    },\r\n    json: true\r\n  }\r\n\r\n  let token = await request(options)\r\n  let decoded = await utils.verifyToken(token, config.secret)\r\n\r\n  t.is(decoded.username, user.username)\r\n})\r\n"]}